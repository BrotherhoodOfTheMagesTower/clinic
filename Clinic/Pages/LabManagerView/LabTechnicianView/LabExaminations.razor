@page "/LabExaminations"
@using Clinic.Data.Enums
@using Clinic.Data.Models
@using Clinic.Data
@using Clinic.Services
@inject LaboratoryExaminationService laboratoryExaminationService;

@inject NavigationManager NavigationManager;

<PageTitle>Laboratory examinations</PageTitle>

<AuthorizeView Roles="Lab Technician, Lab Manager">
    <Authorized>
        <section>
            <h3 class="mb-3 fw-bold"><b>Laboratory examinations</b></h3> <br />

            <input type="checkbox" @onchange="ReloadExaminations">
            <label for="addition">Only commisioned</label><br /><br />
            @if (examinationsList != null)
            {
                <TableTemplate Items="examinationsList">
                    <TableHeader>
                        <th> Examination's id </th>
                        <th> Code </th>
                        <th> Name </th>
                        <th> Order Date </th>
                        <th> Status </th>
                        <th> Doctor's note </th>
                        <th> Action </th>
                    </TableHeader>
                    <RowTemplate Context="examination">
                        <td> @examination.Id </td>
                        <td> @examination.GlossaryDictionary.Code.ToString().ToLower() </td>
                        <td> @examination.GlossaryDictionary.Name </td>
                        <td> @examination.OrderedAt </td>
                        <td> @examination.Status.ToString().ToLower() </td>
                        <td> @examination.DoctorsNotes </td>
                        <th>
                            <a style="text-underline-position:below; cursor:pointer; color:blue" @onclick="(() => NavigateToEditExamination(examination.Id.ToString()))">Edit</a>
                        </th>
                    </RowTemplate>
                </TableTemplate>
            }
            else
            {
                <h3 class="mb-3 fw-bold">There are no examinations in the base</h3> <br />
            }
            <br /><br />
        </section>
    </Authorized>
    <NotAuthorized>
        <section>
            <h1>Access denied!</h1>
        </section>
    </NotAuthorized>
</AuthorizeView>

@code {

    private List<LaboratoryExamination>? examinationsList;

    protected override async Task OnInitializedAsync()
    {
        examinationsList = await laboratoryExaminationService.GetAllLabExaminationsAsync();
        examinationsList = examinationsList.OrderByDescending(x => x.OrderedAt).ToList();
    }

    private async Task ReloadExaminations(ChangeEventArgs e)
    {
        await OnInitializedAsync();
        if (e.Value is not null)
        {
            if ((bool)e.Value)
                examinationsList = examinationsList!.Where(x => x.Status == ExaminationStatus.COMMISIONED).ToList();
        }
    }

    public void NavigateToEditExamination(string Id)
    {
        NavigationManager.NavigateTo($"EditLabExamination/{Id}");
    }

 }