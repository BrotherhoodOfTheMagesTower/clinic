@page "/ManageUsers"
@using Clinic.Services
@inject UserService userService;
@inject NavigationManager NavigationManager

<PageTitle>Manage Users</PageTitle>

<AuthorizeView Roles="Administrator">
    <Authorized>
        <div class="col-12">
            <h2>Edit or disable user accounts</h2>
            @if (users != null)
            {
                    @if (users.Any())
                    {
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Email</th>
                                <th>Email confirmed</th>
                                <th>Phone number</th>
                                <th>Phone number confirmed</th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                    <tbody>
                        @foreach (var user in users)
                        {
                            <tr>
                                <td>@user.Email</td>
                                <td>@user.EmailConfirmed</td>
                                <td>@user.PhoneNumber</td>
                                <td>@user.PhoneNumberConfirmed</td>
                                <td class="align-self-auto nav-link" @onclick="() => NavigateToEditUser(user.Id)">Edit</td>
                                <td class="align-self-auto link-danger" @onclick="() => NavigateToDisableUser(user.Id)">Disable</td>
                            </tr>
                        }
                    </tbody>
                    </table>
                    }
                    else
                    {
                        <h5 class="card-title">No users in database</h5>
                    }
            }
            else
            {
                <h5 class="card-title">No users in database</h5>
            }
        </div>
    </Authorized>
    <NotAuthorized>
        <h1>Access denied!</h1>
    </NotAuthorized>
</AuthorizeView>

@code {
    private List<ApplicationUser>? users;
    protected override async Task OnInitializedAsync()
    {
        users = await userService.GetAllUsersAsync();
    }

    private void NavigateToEditUser(string userId)
    {
        NavigationManager.NavigateTo($"EditUser/{userId}");
    }
    
    private void NavigateToDisableUser(string userId)
    {
        NavigationManager.NavigateTo($"DisableUser/{userId}");
    }
}