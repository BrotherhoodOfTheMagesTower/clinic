@page "/ManageUsers"
@using Clinic.Services
@inject UserService userService;
@inject NavigationManager NavigationManager

<PageTitle>Manage Users</PageTitle>

<AuthorizeView Roles="Administrator">
    <Authorized>
            <div class="card-header" style="margin-bottom: 40px" >
                <h2 class="text-center" style="margin-top:8px"><b>Edit or enable/disable user accounts</b></h2>
            </div>
            @if (users != null)
            {
                @if (users.Any())
                {
                    <TableTemplate Items="users">
                        <TableHeader>
                            <th class="text-center">First Name</th>
                            <th class="text-center">Last Name</th>
                            <th class="text-center">Email</th>
                            <th class="text-center">Phone number</th>
                            <th class="text-center">Role</th>
                            <th class="text-center">Is enabled</th>
                            <th></th>
                            <th></th>
                        </TableHeader>
                        <RowTemplate Context="user">
                            <td class="text-center">@user.Item2</td>
                            <td class="text-center">@user.Item3</td>
                            <td class="text-center">@user.Item1.Email</td>
                            @if(@user.Item1.PhoneNumber is not null)
                            {
                                <td class="text-center">@user.Item1.PhoneNumber</td>
                            } else
                            {
                                <td class="text-center">-</td>
                            }

                            <td class="text-center">@user.Item4</td>
                            <td class="text-center">@user.Item5</td>
                            <td role="button" class="align-self-auto nav-link" @onclick="() => NavigateToEditUser(user.Item1.Id)">Edit</td>
                            <td role="button" class="align-self-auto link-danger" @onclick="() => NavigateToEnableOrDisableUser(user.Item1.Id)">Enable/Disable</td>
                        </RowTemplate>
                    </TableTemplate>
                }
                else
                {
                    <h5 class="card-title">Loading...</h5>
                }
            }
            else
            {
                <h5 class="card-title">No users in database</h5>
            }
    </Authorized>
    <NotAuthorized>
        <h1>Access denied!</h1>
    </NotAuthorized>
</AuthorizeView>

@code {
    private List<Tuple<ApplicationUser, string?, string?, string, bool>> users = new();

    protected override async Task OnInitializedAsync()
    {
        var appUsers = await userService.GetAllUsersAsync();
        foreach (var appUser in appUsers)
        {
            var names = userService.GetFirstAndLastNameForSpecificUser(appUser.Id);
            users.Add(Tuple.Create(appUser, names.Item1, names.Item2, userService.GetRolesForUserInOneStringSplittedByAComa(appUser.Id), userService.CheckIfAccountIsActive(appUser.Id)));
        }
    }

    private void NavigateToEditUser(string userId)
    {
        NavigationManager.NavigateTo($"EditUser/{userId}");
    }

    private void NavigateToEnableOrDisableUser(string userId)
    {
        NavigationManager.NavigateTo($"EnableOrDisableAcc/{userId}");
    }
}