@page "/ExaminationsAndAppointmentsHistory/{Id}"
@using Clinic.Data
@using Clinic.Data.Enums
@using Clinic.Data.Models
@using System.Globalization
@using System.ComponentModel.DataAnnotations


@inject NavigationManager NavigationManager;



<PageTitle>Appointments history</PageTitle>

<AuthorizeView Roles="Doctor">
    <Authorized>
        @*<h3 class="mb-3 fw-bold"><b>Patients @searchPatient</b></h3> <br />
            <div>
            <input type="text" @bind="searchPatient" class="form-control w-75"/>
            <button type="submit" class="btn btn-primary" @onclick="SearchPatient">Search</button>
            <button type="submit" class="btn btn-primary"  @onclick="(() => NavigateToAddPatient())">Add patient</button>
            </div><br />*@

        
        @if (AppointmentsList != null)
        {
            <h1 class="mb-3 fw-bold">Patient: @testPatient.FirstName @testPatient.LastName</h1><br />
            <h2 class="mb-3 fw-bold">Appointments history</h2><br />

            <TableTemplate Items="AppointmentsList">
                <TableHeader>
                    <th> Status </th>
                    <th> Date </th>
                    <th> Doctor </th>
                    <th> Action </th>
                    
                </TableHeader>
                <RowTemplate Context="appointment">
                    <td> @appointment.Status.ToString().ToLower() </td>
                    <td> @appointment.RegisteredTo </td>
                    <td> @appointment.Doctor.FirstName @appointment.Doctor.LastName</td>
                    <th>
                        <a style="text-underline-position:below; cursor:pointer; color:blue" @onclick="(() => NavigateToAppointmentDetails(appointment.Id.ToString()))">Show details</a>
                    </th>
                </RowTemplate>
            </TableTemplate>
        }
        else
        {
            <h3 class="mb-3 fw-bold">There are no appointments in database</h3> <br />
        }
        <br /><br />
    </Authorized>
    <NotAuthorized>
        <h1>Access denied!</h1>
    </NotAuthorized>
</AuthorizeView>

@code {

    //id pajcenta, ktorego wizyty maja byc wyswietlone w tabeli
    [Parameter]
    public string Id { get; set; }

    private static Patient  testPatient = new Patient() { Id = Guid.NewGuid(), FirstName = "Tomasz", LastName = "Kowalski", Gender = Gender.MALE };

    protected override void OnInitialized()
    {
        
        //testowo przypisany pacjent, docelowo ma byc przypisany patient ktorego Id jest przekazywane z poprzedniej strony
       
        base.OnInitialized();
    }


    //testowa lista wizyt, docelowo bedzie zwracana z metody, ktora pobierze wszystkie wizyty pacjenta przypisanego powyżej
    private List<Appointment> AppointmentsList = new List<Appointment>()
    {
        new Appointment() {Id=Guid.NewGuid(), Status=AppointmentStatus.BOOKED, RegisteredTo=new DateTime(2022, 12, 25, 10, 30, 00), Doctor=new Doctor() { Id = Guid.NewGuid().ToString(), PermissionNumber = 123, FirstName = "Zbigniew", LastName = "Nowak" }, Patient = testPatient, Registrar=new Registrar() {Id=Guid.NewGuid().ToString(), FirstName = "Magdalena", LastName = "Wojcik"}},
        new Appointment() {Id=Guid.NewGuid(), Status=AppointmentStatus.BOOKED, RegisteredTo=new DateTime(2022, 10, 12, 11, 45, 00), Doctor=new Doctor() { Id = Guid.NewGuid().ToString(), PermissionNumber = 234, FirstName = "Wacław", LastName = "Nowakowski" }, Patient=testPatient, Registrar=new Registrar() {Id=Guid.NewGuid().ToString(), FirstName = "Magdalena2", LastName = "Wojcik2"}},
        new Appointment() {Id=Guid.NewGuid(), Status=AppointmentStatus.BOOKED, RegisteredTo=new DateTime(2022, 02, 20, 14, 00, 00), Doctor=new Doctor() { Id = Guid.NewGuid().ToString(), PermissionNumber = 345, FirstName = "Robert", LastName = "Wojcik" }, Patient=testPatient, Registrar=new Registrar() {Id=Guid.NewGuid().ToString(), FirstName = "Magdalena3", LastName = "Wojcik3"}}

    };

    public void NavigateToAppointmentDetails(string Id)
    {
        NavigationManager.NavigateTo($"PatientHistoryAppointmentDetails/{Id}");
    }
}