@page "/EditLaboratoryExamination/{EditExaminationId}"
@using Clinic.Data.Enums
@using Clinic.Data.Models
@using Clinic.Data
@using Clinic.Services

@inject NavigationManager NavigationManager;
@inject IToastService toastService;
@inject LaboratoryExaminationService laboratoryExaminationService;

<PageTitle>Edit laboratory examinations</PageTitle>

<AuthorizeView Roles="Doctor" Context="examinationEditing">
    <Authorized>
        @if(examination != null)
        {
            <EditForm EditContext="newExamination" OnValidSubmit="ChangeExistingExamination" class="w-50 bg-gray px-4 py-3 rounded">

                <h1 class="mb-3 fw-bold">Edit laboratory examinations</h1><br />
                <h3 class="mb-3 fw-bold">Examination:</h3>

                <label class="d-block mb-1 ml-1">id </label>
                <label class="form-control w-75" >@EditExaminationId </label><br />

                <label class="d-block mb-1 ml-1">Name: </label>
                <label class="form-control w-75" > @examination.GlossaryDictionary.Name </label><br />

                <label class="d-block mb-1 ml-1"> Status:</label>
                <label class="form-control w-75"> @status </label> <br />
          

                <label class="d-block mb-1 ml-1">Doctor notes: </label>
                <InputTextArea @bind-Value="@examination.DoctorsNotes" class="form-control w-75" /> <br />

                @if (examination.Status == ExaminationStatus.APPROVED)

                {
                    <label class="d-block mb-1 ml-1">Result: </label>
                    <label class="form-control w-75" > @examination.Result</label><br />

                    <label class="d-block mb-1 ml-1">Lab Technician: </label>
                    <label class="form-control w-75" >@examination.LabTechnician?.FirstName @examination.LabTechnician?.LastName </label><br />

                    <label class="d-block mb-1 ml-1">Execution date: </label>
                    <label class="form-control w-75" >@examination.ExecutedOrCancelledAt </label><br />
                }
                else
                {
                     <p>There are no results yet!</p> 
                }

                <div>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </EditForm>
        }
    </Authorized>
    <NotAuthorized>
        <h1>Access denied!</h1>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter]
    public string EditExaminationId { get; set; } = String.Empty;

    //Kod badania
    public string? status;
    private LaboratoryExamination? examination;
    private EditContext? newExamination;

    protected override async Task OnInitializedAsync()
    {
        examination = await laboratoryExaminationService.GetByIdAsync(Guid.Parse(EditExaminationId));
        if(examination != null)
        {
            newExamination = new EditContext(examination);
            status = examination.Status.ToString().ToLower();
        }
    }

    private void ChangeExistingExamination()
    {
        if (examination != null)
        {
            laboratoryExaminationService.Update(examination);
            toastService.ShowSuccess("Examination has been successfully updated!");
        }
    }

    private void NavigateToLabExaminations()
    {
        NavigationManager.NavigateTo($"LabExaminations");
    }

 }