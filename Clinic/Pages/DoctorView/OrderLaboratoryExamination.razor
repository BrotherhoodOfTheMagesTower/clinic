@page "/OrderLaboratoryExamination/{Id}"
@using Clinic.Data
@using Clinic.Data.Enums
@using Clinic.Data.Models
@using System.Globalization
@using System.ComponentModel.DataAnnotations
@using System.Diagnostics
@using Clinic.Services

@inject NavigationManager NavigationManager;
@inject IToastService toastService
@inject GlossaryService glossaryService;
@inject LaboratoryExaminationService laboratoryExaminationService;
@inject AppointmentService appointmentService;

<PageTitle>Order laboratory examination</PageTitle>

<AuthorizeView Roles="Doctor" Context="examinationOrderByDoctor">
    <Authorized>

        @if (!validId)
        {
            <NotFound />
        }

        else
        {
            <section>
                <EditForm EditContext="examinationToOrder" OnValidSubmit="OrderExamination" class="w-50 bg-gray px-4 py-3 rounded">
                    <h1 class="mb-3 fw-bold">Order laboratory examination</h1><br />
                    <h3 class="mb-3 fw-bold">Examination:</h3>
                    <label class="d-block mb-1 ml-1"> Name: </label>
                    @if (allGlossaryDictionares != null)
                    {
                        <InputSelect class="mb-3 fw-bold" @bind-Value="@glossaryCode">
                            @foreach (var c in allGlossaryDictionares)
                            {
                        <option Value=@c.Code>@c.Name</option>
                            }
                </InputSelect>
                    }
                    <label class="d-block mb-1 ml-1">Doctor's notes:</label>
                    <InputTextArea @bind-Value="@examination.DoctorsNotes" class="form-control w-75" /> <br />
                    <div>
                        <button type="submit" class="btn btn-primary">Order</button>
                    </div>
                </EditForm>
            </section>
        }

    </Authorized>
    <NotAuthorized>
        <section>
        <h1>Access denied!</h1>
        </section>
    </NotAuthorized>
</AuthorizeView>

@code {
    //appointment Id
    [Parameter]
    public string Id { get; set; } = String.Empty;

    private string glossaryCode = String.Empty;
    private List<GlossaryDictionary>? allGlossaryDictionares;
    private LaboratoryExamination examination = new();
    private EditContext? examinationToOrder;
    private bool validId = true;
    private Guid parsedId;

    protected override async Task OnInitializedAsync()
    {
        examinationToOrder = new EditContext(examination);
        allGlossaryDictionares = (await glossaryService.GetAllDictionariesAsync(GlossaryType.LABORATORY)).ToList();
        glossaryCode = allGlossaryDictionares.First().Code.ToString() ?? "";
        validId = Guid.TryParse(Id, out parsedId);
    }

    private void OrderExamination()
    {
        if (validId == false)
        {
            return;
        }

        examination.Appointment = appointmentService.GetById(parsedId);

        examination.Status = ExaminationStatus.COMMISIONED;
        examination.OrderedAt = DateTime.Now;

        if (allGlossaryDictionares != null)
        {
            foreach (var dictionary in allGlossaryDictionares)
            {
                if (dictionary.Code.ToString().Equals(glossaryCode))
                    examination.GlossaryDictionary = dictionary;
            }

            laboratoryExaminationService.Add(examination);
            if (laboratoryExaminationService.GetById(examination.Id) != null)
               {
                   toastService.ShowSuccess("Laboratory examination ordered successfully!");
                   NavigationManager.NavigateTo($"EditAppointment/{Id}");
               }
        }
    }
    }